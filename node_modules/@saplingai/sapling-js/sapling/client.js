import axios from "axios";
import { v4 as uuidv4 } from 'uuid';

export class Client {
  constructor(apiKey, options = {}) {
    this.apiKey = apiKey;
    this.timeout = options.timeout || 120000;
    this.hostname = options.hostname || 'https://api.sapling.ai';
    this.pathname = options.pathname || '/api/v1/';
    this.urlEndpoint = `${this.hostname}${this.pathname}`;
    axios.defaults.timeout = this.timeout;
  }

   edits(text, sessionId, options = {}) {
    const url = `${this.urlEndpoint}edits`;
    sessionId = sessionId || uuidv4();

    let data = {
      text,
      key: this.apiKey,
      session_id: sessionId,
    }

    if (options.variety != null) {
      data.variety = variety;
    }

    if (options.autoApply != null) {
      data.auto_apply = autoApply;
    }

    return new Promise((resolve) => {
      axios({
        url,
        data,
        method: 'post',
        timeout: this.timeout,
      })
      .then(function (response) {
          resolve(response);
      });
    });
  }

  accept(editUUID, sessionId) {
    const url = `${this.urlEndpoint}edits/${editUUID}/accept`;
    sessionId = sessionId || uuidv4();
    let data = {
      key: this.apiKey,
      session_id: sessionId,
    }
    axios({
      url,
      data,
      method: 'post',
      timeout: this.timeout,
    })
  }

  reject(editUUID, sessionId) {
    const url = `${this.urlEndpoint}edits/${editUUID}/reject`;
    sessionId = sessionId || uuidv4();
    let data = {
      key: this.apiKey,
      session_id: sessionId,
    }
    axios({
      url,
      data,
      method: 'post',
      timeout: this.timeout,
    })
  }

}
